<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
  <!-- TAM Ldap数据源 -->
  <bean id="tamLdapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
    <property name="url" value="${idp.tam.ldap.url}" />
    <property name="userDn" value="${idp.tam.ldap.userDn}" />
    <property name="password" value="${idp.tam.ldap.password}" />
    <!-- 必须配置为false, 禁用此模式下的连接池机制才能使MutablePoolingContextSource的连接池控制起作用, 否则无法重新连接失效的连接 -->
    <property name="pooled" value="false" />
  </bean>
  
  <bean id="tamLdapPoolingContextSource"
    class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
    <property name="contextSource" ref="tamLdapContextSource" />
    <!-- 不限制各个类型最大的连接数 -->
    <property name="maxActive" value="-1" />
    <!-- 不限制总的最大连接数 -->
    <property name="maxTotal" value="-1" />
    <!-- 释放达到的并保持的最大连接，即繁忙后释放连接时,保持的最大连接 -->
    <property name="maxIdle" value="16" />
    <!-- 创建时，建立空闲连接数的上限，即最小-->
    <property name="minIdle" value="8" />
    <!-- 当Pool中资源耗尽时, 缺省为无限等待, 为了防止对WAS线程造成长时间占用, 调整为一个固定时间. 应根据实际运行场景进行调整, -1时为无限等待 -->
    <property name="maxWait" value="1000" />
    <!-- 连接池中连接的验证器, 缺省查询单节点, 并只返回Objectclass属性 -->
    <property name="dirContextValidator">
      <bean class="org.springframework.ldap.pool.validation.DefaultDirContextValidator"></bean>
    </property>
    <!-- 三种检测方式, 一般不需要在租界前检测，也不要在归还时检测, 即使只打开一种方式, 也会对性能敏感的场合产生影响. 除非应用对性能不敏感 -->
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <!-- 推荐使用空闲检测的方式, 以指定的空闲时间检测连接, 失效的连接将被逐出 -->
    <property name="testWhileIdle" value="true" />
    <!-- 毫秒为单位的空闲逐出检测的间隔 -->
    <property name="timeBetweenEvictionRunsMillis" value="10000" />
    <!-- 每次做连接检测时, 检查的连接次数，例如10表示每次检测10个连接池中的连接 -->
    <property name="numTestsPerEvictionRun" value="10"></property>
  </bean>
  
  <bean id="tamLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <property name="contextSource" ref="tamLdapPoolingContextSource"/>
  </bean>
  
  <!-- TIM Ldap数据源 -->
  <bean id="timLdapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
    <property name="url" value="${idp.tim.ldap.url}" />
    <property name="userDn" value="${idp.tim.ldap.userDn}" />
    <property name="password" value="${idp.tim.ldap.password}" />
    <!-- 必须配置为false, 禁用此模式下的连接池机制才能使MutablePoolingContextSource的连接池控制起作用, 否则无法重新连接失效的连接 -->
    <property name="pooled" value="false" />
  </bean>
  
  <bean id="timLdapPoolingContextSource"
    class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
    <property name="contextSource" ref="timLdapContextSource" />
    <!-- 不限制各个类型最大的连接数 -->
    <property name="maxActive" value="-1" />
    <!-- 不限制总的最大连接数 -->
    <property name="maxTotal" value="-1" />
    <!-- 释放达到的并保持的最大连接，即繁忙后释放连接时,保持的最大连接 -->
    <property name="maxIdle" value="16" />
    <!-- 创建时，建立空闲连接数的上限，即最小-->
    <property name="minIdle" value="8" />
    <!-- 当Pool中资源耗尽时, 缺省为无限等待, 为了防止对WAS线程造成长时间占用, 调整为一个固定时间. 应根据实际运行场景进行调整, -1时为无限等待 -->
    <property name="maxWait" value="1000" />
    <!-- 连接池中连接的验证器, 缺省查询单节点, 并只返回Objectclass属性 -->
    <property name="dirContextValidator">
      <bean class="org.springframework.ldap.pool.validation.DefaultDirContextValidator"></bean>
    </property>
    <!-- 三种检测方式, 一般不需要在租界前检测，也不要在归还时检测, 即使只打开一种方式, 也会对性能敏感的场合产生影响. 除非应用对性能不敏感 -->
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <!-- 推荐使用空闲检测的方式, 以指定的空闲时间检测连接, 失效的连接将被逐出 -->
    <property name="testWhileIdle" value="true" />
    <!-- 毫秒为单位的空闲逐出检测的间隔 -->
    <property name="timeBetweenEvictionRunsMillis" value="10000" />
    <!-- 每次做连接检测时, 检查的连接次数，例如10表示每次检测10个连接池中的连接 -->
    <property name="numTestsPerEvictionRun" value="10"></property>
  </bean>
  
  <bean id="timLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <property name="contextSource" ref="timLdapPoolingContextSource"/>
  </bean>
  
  <!-- AD Ldap数据源 -->
  <bean id="adTamLdapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
    <property name="url" value="${idp.ad.ldap.url}" />
    <property name="userDn" value="${idp.ad.ldap.userDn}" />
    <property name="password" value="${idp.ad.ldap.password}" />
    <!-- 必须配置为false, 禁用此模式下的连接池机制才能使MutablePoolingContextSource的连接池控制起作用, 否则无法重新连接失效的连接 -->
    <property name="pooled" value="false" />
  </bean>
  
  <bean id="adTamLdapPoolingContextSource"
    class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
    <property name="contextSource" ref="adTamLdapContextSource" />
    <!-- 不限制各个类型最大的连接数 -->
    <property name="maxActive" value="-1" />
    <!-- 不限制总的最大连接数 -->
    <property name="maxTotal" value="-1" />
    <!-- 释放达到的并保持的最大连接，即繁忙后释放连接时,保持的最大连接 -->
    <property name="maxIdle" value="16" />
    <!-- 创建时，建立空闲连接数的上限，即最小-->
    <property name="minIdle" value="8" />
    <!-- 当Pool中资源耗尽时, 缺省为无限等待, 为了防止对WAS线程造成长时间占用, 调整为一个固定时间. 应根据实际运行场景进行调整, -1时为无限等待 -->
    <property name="maxWait" value="1000" />
    <!-- 连接池中连接的验证器, 缺省查询单节点, 并只返回Objectclass属性 -->
    <property name="dirContextValidator">
      <bean class="org.springframework.ldap.pool.validation.DefaultDirContextValidator"></bean>
    </property>
    <!-- 三种检测方式, 一般不需要在租界前检测，也不要在归还时检测, 即使只打开一种方式, 也会对性能敏感的场合产生影响. 除非应用对性能不敏感 -->
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <!-- 推荐使用空闲检测的方式, 以指定的空闲时间检测连接, 失效的连接将被逐出 -->
    <property name="testWhileIdle" value="true" />
    <!-- 毫秒为单位的空闲逐出检测的间隔 -->
    <property name="timeBetweenEvictionRunsMillis" value="10000" />
    <!-- 每次做连接检测时, 检查的连接次数，例如10表示每次检测10个连接池中的连接 -->
    <property name="numTestsPerEvictionRun" value="10"></property>
  </bean>
  
  <bean id="adTamLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
    <property name="contextSource" ref="adTamLdapContextSource"/>
  </bean>
  
  <bean id="midJdbcDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${idp.mid.jdbc.driver}" />
		<property name="jdbcUrl" value="${idp.mid.jdbc.url}" />
		<property name="user" value="${idp.mid.jdbc.username}" />
		<property name="password" value="${idp.mid.jdbc.password}" />

<!-- 		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" /> -->
<!-- 		<property name="minPoolSize" value="${c3p0.minPoolSize}" /> -->
<!-- 		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" /> -->
<!-- 		<property name="maxStatements" value="${c3p0.maxStatements}" /> -->
<!-- 		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" /> -->
<!-- 		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" /> -->
<!-- 		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" /> -->
<!-- 		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" /> -->
<!-- 		<property name="testConnectionOnCheckin" value="${c3p0.testConnectionOnCheckin}" /> -->
<!-- 		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" /> -->
		<!-- <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" /> -->
	</bean>
	<bean id="midJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="midJdbcDataSource"></property>
	</bean>
  
	<!-- TAM LDAP User Service -->
	<bean id="tamLdapUserService" class="com.sinopec.siam.am.idp.authn.service.LdapUserServiceImpl">
		<property name="template" ref="tamLdapTemplate"></property>
		<property name="userBaseDN" value="${idp.tam.ldap.user.baseDn}"></property>
	</bean>
	
	<!-- TAM LDAP User Security Authority Service -->
	<bean id="tamLdapUserSecAuthrityService" class="com.sinopec.siam.am.idp.authn.service.LdapUserServiceImpl">
		<property name="template" ref="tamLdapTemplate"></property>
		<property name="userBaseDN" value="${idp.loginmodule.tamldap.secauthority.ldap.userBaseDN}"></property>
	</bean>
	
	<!-- TAM Local User Lock Service -->
	<bean id="tamLocalUserLockService" class="com.sinopec.siam.am.idp.authn.service.LocalUserLockService">
		<property name="maxFailedNumber" value="${idp.loginmodule.tamldap.userlock.maxFailedNumber}"></property>
		<property name="unLockTimeInterval" value="${idp.loginmodule.tamldap.userlock.unLockTimeInterval}"></property>
		<property name="userNameAttr" value="${idp.loginmodule.tamldap.secauthority.ldap.userNameAttr}"></property>
		<property name="unlockTimeAttr" value="${idp.loginmodule.tamldap.userlock.ldap.unlockTimeAttr}"></property>
		<property name="unlockTimeFormat" value="${idp.loginmodule.tamldap.userlock.ldap.unlockTimeFormat}"></property>
		<property name="failedNumberAttr" value="${idp.loginmodule.tamldap.userlock.ldap.failedNumberAttr}"></property>
		<property name="lockStateAttr" value="${idp.loginmodule.tamldap.userlock.ldap.lockStateAttr}"></property>
	</bean>
	
	<!-- TIM User Pass Service -->
	<bean id="timUserPassService" class="com.sinopec.siam.am.idp.authn.service.TimLdapUserPassServiceImpl">
		<property name="ldapTemplate" ref="timLdapTemplate"></property>
		<property name="ldapUserBaseDN" value="${idp.loginmodule.timldap.secauthority.userBaseDN}"></property>
		<property name="userNameLdapAttribute" value="${idp.loginmodule.timldap.secauthority.userNameAttribute}"></property>
		<property name="userPassLastChangedLdapAttribute" value="${idp.loginmodule.timldap.secauthority.userPassLastChangedAttribute}"></property>
		<property name="userPassResetStateLdapAttribute" value="${idp.loginmodule.timldap.secauthority.userPassResetStateLdapAttribute}"></property>
		<property name="timSoapEndpoint" value="${idp.tim.api.soapEndpoint}"></property>
		<property name="itimManager" value="${itim.manager.principal}"></property>
		<property name="itimManagerPwd" value="${itim.manager.credentials}"></property>
		<property name="notifyByMail" value="${idp.loginmodule.timldap.secauthority.notifyByMail}"></property>
		<property name="userOwnerLdapAttribute" value="${idp.loginmodule.timldap.secauthority.userOwnerLdapAttribute}"></property>
	</bean>
	
	<!-- TIM User Pass Recovery Question Service -->
	<bean id="timUserPassRecQueService" class="com.sinopec.siam.am.idp.authn.service.TimDBUserPassServiceImpl">
		<property name="ldapTemplate" ref="timLdapTemplate"></property>
		<property name="ldapUserBaseDN" value="${idp.loginmodule.timldap.secauthority.userBaseDN}"></property>
		<property name="userNameLdapAttribute" value="${idp.loginmodule.timldap.secauthority.userNameAttribute}"></property>
		<property name="userPassRecoveryQuestionLdapAttribute" value="${idp.loginmodule.timldap.secauthority.userPassRecoveryQuestionLdapAttribute}"></property>
		<property name="passQuestionListFilter" value="${idp.loginmodule.timldap.secauthority.passQuestionListFilter}"></property>
		<property name="passQuestionListLdapAttribute" value="${idp.loginmodule.timldap.secauthority.passQuestionListLdapAttribute}"></property>
		<property name="jdbcTemplate" ref="midJdbcTemplate"></property>
	</bean>
	
	<!-- TamLockUserLock schedule bean, used by Spring Job Controlled substance -->
  <bean id="tamLocalUserLock4TimeSynTask"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="tamLocalUserLockService" />
    <property name="targetMethod" value="unLockAll" />
    <property name="concurrent" value="false" />
  </bean>
  <bean id="tamLocalUserLockTriggers" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
      <list>
        <!--  
                                         当前配置的是: 每小时运行一次
                                         value中的内容： 
                                               第6位：的1代表星期天，在国外星期天才是每个周的开始！ 
                                              第5位： *代表所有月的星期天 
                                              第4位：？代表也没有具体到某日的星期天 
                                              第3位：23代表23点，注意：采用24小时 
                                              第2位：59代表分钟 
                                              第1位：50代表秒 
        -->
        <bean class="org.springframework.scheduling.quartz.CronTriggerBean"> 
            <property name="jobDetail" ref="tamLocalUserLock4TimeSynTask"/> 
            <property name="cronExpression" value="10 * * ? * *"/>  
        </bean> 
      </list>
    </property>
  </bean>
</beans>