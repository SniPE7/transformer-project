<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- TAM Ldap数据源 -->
	<bean id="tamLdapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="urls" value="${idp.tam.ldap.url}" />
		<property name="userDn" value="${idp.tam.ldap.userDn}" />
		<property name="password" value="${idp.tam.ldap.password}" />
		<!-- 必须配置为false, 禁用此模式下的连接池机制才能使MutablePoolingContextSource的连接池控制起作用, 否则无法重新连接失效的连接 -->
		<property name="pooled" value="false" />
		<property name="baseEnvironmentProperties">
			<map>
				<entry key="com.sun.jndi.ldap.connect.timeout" value="1000" />
				<entry key="com.sun.jndi.ldap.read.timeout" value="1000" />
			</map>
		</property>
	</bean>

	<bean id="tamLdapPoolingContextSource"
		class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
		<property name="contextSource" ref="tamLdapContextSource" />
		<!-- 不限制各个类型最大的连接数 -->
		<property name="maxActive" value="-1" />
		<!-- 不限制总的最大连接数 -->
		<property name="maxTotal" value="-1" />
		<!-- 释放达到的并保持的最大连接，即繁忙后释放连接时,保持的最大连接 -->
		<property name="maxIdle" value="16" />
		<!-- 创建时，建立空闲连接数的上限，即最小 -->
		<property name="minIdle" value="8" />
		<!-- 当Pool中资源耗尽时, 缺省为无限等待, 为了防止对WAS线程造成长时间占用, 调整为一个固定时间. 应根据实际运行场景进行调整, 
			-1时为无限等待 -->
		<property name="maxWait" value="1000" />
		<!-- 连接池中连接的验证器, 缺省查询单节点, 并只返回Objectclass属性 -->
		<property name="dirContextValidator">
			<bean
				class="org.springframework.ldap.pool.validation.DefaultDirContextValidator"></bean>
		</property>
		<!-- 三种检测方式, 一般不需要在租界前检测，也不要在归还时检测, 即使只打开一种方式, 也会对性能敏感的场合产生影响. 除非应用对性能不敏感 -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 推荐使用空闲检测的方式, 以指定的空闲时间检测连接, 失效的连接将被逐出 -->
		<property name="testWhileIdle" value="true" />
		<!-- 毫秒为单位的空闲逐出检测的间隔 -->
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<!-- 每次做连接检测时, 检查的连接次数，例如10表示每次检测10个连接池中的连接 -->
		<property name="numTestsPerEvictionRun" value="10"></property>
	</bean>

	<bean id="tamLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<property name="contextSource" ref="tamLdapPoolingContextSource" />
	</bean>

	<!-- TIM Ldap数据源 -->
	<bean id="timLdapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
		<property name="url" value="${idp.tim.ldap.url}" />
		<property name="userDn" value="${idp.tim.ldap.userDn}" />
		<property name="password" value="${idp.tim.ldap.password}" />
		<!-- 必须配置为false, 禁用此模式下的连接池机制才能使MutablePoolingContextSource的连接池控制起作用, 否则无法重新连接失效的连接 -->
		<property name="pooled" value="false" />
	</bean>

	<bean id="timLdapPoolingContextSource"
		class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
		<property name="contextSource" ref="timLdapContextSource" />
		<!-- 不限制各个类型最大的连接数 -->
		<property name="maxActive" value="-1" />
		<!-- 不限制总的最大连接数 -->
		<property name="maxTotal" value="-1" />
		<!-- 释放达到的并保持的最大连接，即繁忙后释放连接时,保持的最大连接 -->
		<property name="maxIdle" value="16" />
		<!-- 创建时，建立空闲连接数的上限，即最小 -->
		<property name="minIdle" value="8" />
		<!-- 当Pool中资源耗尽时, 缺省为无限等待, 为了防止对WAS线程造成长时间占用, 调整为一个固定时间. 应根据实际运行场景进行调整, 
			-1时为无限等待 -->
		<property name="maxWait" value="1000" />
		<!-- 连接池中连接的验证器, 缺省查询单节点, 并只返回Objectclass属性 -->
		<property name="dirContextValidator">
			<bean
				class="org.springframework.ldap.pool.validation.DefaultDirContextValidator"></bean>
		</property>
		<!-- 三种检测方式, 一般不需要在租界前检测，也不要在归还时检测, 即使只打开一种方式, 也会对性能敏感的场合产生影响. 除非应用对性能不敏感 -->
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 推荐使用空闲检测的方式, 以指定的空闲时间检测连接, 失效的连接将被逐出 -->
		<property name="testWhileIdle" value="true" />
		<!-- 毫秒为单位的空闲逐出检测的间隔 -->
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<!-- 每次做连接检测时, 检查的连接次数，例如10表示每次检测10个连接池中的连接 -->
		<property name="numTestsPerEvictionRun" value="10"></property>
	</bean>

	<bean id="timLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
		<property name="contextSource" ref="timLdapPoolingContextSource" />
	</bean>

</beans>