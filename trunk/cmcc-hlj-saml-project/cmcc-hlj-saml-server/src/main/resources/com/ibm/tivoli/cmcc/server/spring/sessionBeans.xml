<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:oxm="http://www.springframework.org/schema/oxm"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

  <!-- LDAP Template -->
  <bean id="contextSourceTarget" class="org.springframework.ldap.core.support.LdapContextSource">
    <property name="url" value="${ldap.server.url}" />
    <property name="userDn" value="${ldap.server.bindDN}" />
    <property name="password" value="${ldap.server.bindPassword}" />
    <property name="pooled" value="true" />
  </bean>
  <bean id="contextSource" class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
    <property name="contextSource" ref="contextSourceTarget" />
    <property name="maxTotal" value="10" />
  </bean>
  <bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
    <constructor-arg ref="contextSource" />
  </bean>

  <!-- Person DAO -->
  <bean id="personLDAPDao" class="com.ibm.tivoli.cmcc.dir.LDAPPersonDAO">
    <property name="ldapTemplate" ref="ldapTemplate" />
    <property name="url" value="${ldap.server.url}" />
    <property name="base" value="${ldap.server.base}" />
    <property name="userName" value="${ldap.server.bindDN}" />
    <property name="password" value="${ldap.server.bindPassword}" />
    <property name="ldapCtxFactory" value="com.sun.jndi.ldap.LdapCtxFactory"></property>
    <property name="defaultProvinceCode" value="${message.saml.province.code}" />
  </bean>
  <bean id="personBossDao" class="com.ibm.tivoli.cmcc.boss.PersonDAOBossWSImpl">
    <property name="bossService">
      <bean class="com.ibm.lbs.mcc.hl.fsso.boss.BossServiceSoapImpl">
        <property name="serviceEndPoint" value="${boss.soap.service.url}"></property>
      </bean>
    </property>
    <property name="defaultProvinceCode" value="${message.saml.province.code}" />
  </bean>
  <alias alias="personDao" name="personLDAPDao" />

  <!-- LDAP Session Manager only for testing -->
  <!-- Define caches -->
  <!-- <bean id="samlID2HttpSessionIDCache" class="com.ibm.tivoli.cmcc.session.MapBasedSessionCache"></bean> <bean id="httpSessionCache" 
    class="com.ibm.tivoli.cmcc.session.MapBasedSessionCache"></bean> <bean id="samlSessionCache" class="com.ibm.tivoli.cmcc.session.MapBasedSessionCache"></bean> -->
  <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <!-- Re-implement this bean, now this class only use web resource path -->
    <property name="configLocation" value="/WEB-INF/ehcache.xml" />
  </bean>
  <!-- Need to replicate in cluster -->
  <bean id="samlID2HttpSessionIDCache" class="com.ibm.tivoli.cmcc.session.EhcacheBasedSessionCache">
    <property name="cacheManager" ref="cacheManager"></property>
    <property name="cacheName" value="samlID2HttpSessionIDCache"></property>
  </bean>
  <!-- Not need to replicate in cluster -->
  <bean id="httpSessionCache" class="com.ibm.tivoli.cmcc.session.MapBasedSessionCache"></bean>
  <!-- Need to replicate in cluster -->
  <bean id="samlSessionCache" class="com.ibm.tivoli.cmcc.session.EhcacheBasedSessionCache">
    <property name="cacheManager" ref="cacheManager"></property>
    <property name="cacheName" value="samlSessionCache"></property>
  </bean>
  <bean id="sessionManager" class="com.ibm.tivoli.cmcc.session.ServletSessionManagerImpl">
    <property name="personDAO" ref="personDao" />
    <property name="samlID2HttpSessionIDCache" ref="samlID2HttpSessionIDCache"></property>
    <property name="httpSessionCache" ref="httpSessionCache"></property>
    <property name="samlSessionCache" ref="samlSessionCache"></property>
    <property name="sessionListener" ref="sessionListener"></property>
  </bean>
  <bean id="sessionListener" class="com.ibm.tivoli.cmcc.session.ChainSessionListener">
    <property name="listeners">
       <array>
         <ref bean="idpActivateNotifySessionListener"/>
         <ref bean="idpLogoutNotifySessionListener"/>
         <ref bean="spLogoutNotifySessionListener"/>
       </array>
    </property>
  </bean>
  <!-- 侦听Session的活动, 按照指定的时间间隔发送报活信息到Federal IDP -->
  <bean id="idpActivateNotifySessionListener" class="com.ibm.tivoli.cmcc.session.NotifyActiviate2FederationIDPSessionListener">
    <property name="activiateClient" ref="activiateClient"></property>
    <!-- In seconds -->
    <property name="activiateNotifyInterval" value="${saml.client.notify.activiate.insterval}"></property>
  </bean>
  <!-- 侦听Session的活动, 发送Logout事件到Federal IDP -->
  <bean id="idpLogoutNotifySessionListener" class="com.ibm.tivoli.cmcc.session.NotifyLogout2FederationIDPSessionListener">
    <property name="logoutClient" ref="logoutClient"></property>
  </bean>
  <!-- 侦听Session的活动, 发送Logout事件到Federal SP -->
  <bean id="spLogoutNotifySessionListener" class="com.ibm.tivoli.cmcc.session.NotifyLogout2FederationSpSessionListener">
    <property name="logoutClient" ref="logoutClient"></property>
  </bean>

</beans>

