<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
  <!-- Ldap数据源 -->
  <bean id="userLdapContextSource" class="org.springframework.ldap.core.support.LdapContextSource">
    <property name="url" value="${idp.tam.ldap.url}" />
    <property name="userDn" value="${idp.tam.ldap.userDn}" />
    <property name="password" value="${idp.tam.ldap.password}" />
    <!-- 必须配置为false, 禁用此模式下的连接池机制才能使MutablePoolingContextSource的连接池控制起作用, 否则无法重新连接失效的连接 -->
    <property name="pooled" value="false" />
  </bean>
  
  <bean id="userLdapPoolingContextSource"
    class="org.springframework.ldap.pool.factory.MutablePoolingContextSource">
    <property name="contextSource" ref="userLdapContextSource" />
    <!-- 不限制各个类型最大的连接数 -->
    <property name="maxActive" value="-1" />
    <!-- 不限制总的最大连接数 -->
    <property name="maxTotal" value="-1" />
    <!-- 释放达到的并保持的最大连接，即繁忙后释放连接时,保持的最大连接 -->
    <property name="maxIdle" value="16" />
    <!-- 创建时，建立空闲连接数的上限，即最小-->
    <property name="minIdle" value="8" />
    <!-- 当Pool中资源耗尽时, 缺省为无限等待, 为了防止对WAS线程造成长时间占用, 调整为一个固定时间. 应根据实际运行场景进行调整, -1时为无限等待 -->
    <property name="maxWait" value="1000" />
    <!-- 连接池中连接的验证器, 缺省查询单节点, 并只返回Objectclass属性 -->
    <property name="dirContextValidator">
      <bean class="org.springframework.ldap.pool.validation.DefaultDirContextValidator"></bean>
    </property>
    <!-- 三种检测方式, 一般不需要在租界前检测，也不要在归还时检测, 即使只打开一种方式, 也会对性能敏感的场合产生影响. 除非应用对性能不敏感 -->
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <!-- 推荐使用空闲检测的方式, 以指定的空闲时间检测连接, 失效的连接将被逐出 -->
    <property name="testWhileIdle" value="true" />
    <!-- 毫秒为单位的空闲逐出检测的间隔 -->
    <property name="timeBetweenEvictionRunsMillis" value="10000" />
    <!-- 每次做连接检测时, 检查的连接次数，例如10表示每次检测10个连接池中的连接 -->
    <property name="numTestsPerEvictionRun" value="10"></property>
  </bean>
  
  <bean id="certLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <property name="contextSource" ref="userLdapContextSource"/>
  </bean>

	<!-- UserService -->
	<bean id="certUserService" class="com.sinopec.siam.am.idp.authn.service.LdapUserServiceImpl">
		<property name="template" ref="certLdapTemplate"></property>
		<property name="userBaseDN" value="${idp.tam.ldap.user.baseDn}"></property>
	</bean>
	
	<!-- CrlRepositoryService -->
	<bean id="crlRepositoryService" class="com.sinopec.siam.am.idp.authn.service.cert.CrlRepositoryServiceImpl" init-method="initialize">
		<property name="url" value="${idp.loginmodule.cert.crl.url}"></property>
		<property name="crlPath" value="${idp.loginmodule.cert.crl.crlPath}"></property>
		<property name="crlBackUpPath" value="${idp.loginmodule.cert.crl.crlBackUpPath}"></property>
		<property name="crlVerifyRootCertSwitch" value="${idp.loginmodule.cert.crl.crlVerifyRootCertSwitch}"></property>
		<property name="rootCertPath" value="${idp.loginmodule.cert.crl.rootCertPath}"></property>
		<property name="httpConnectTimeout" value="${idp.loginmodule.cert.crl.httpConnectTimeout}"></property>
		<property name="httpReadTimeout" value="${idp.loginmodule.cert.crl.httpReadTimeout}"></property>
	</bean>
	
	<!-- VerifyCrlService -->
	<bean id="verifyCrlService" class="com.sinopec.siam.am.idp.authn.service.cert.VerifyCrlServiceImpl" scope="prototype">
		<property name="crlRepositoryService" ref="crlRepositoryService"></property>
		<property name="checkValidity" value="${idp.loginmodule.cert.crl.checkValidity}"></property>
	</bean>
	
	<!-- VerifyCertService -->
	<bean id="verifyCertService" class="com.sinopec.siam.am.idp.authn.service.cert.VerifyCertServiceImpl" init-method="initialize">
		<property name="verifyCrlService" ref="verifyCrlService"></property>
		<property name="rootCertKeyStorePath" value="${idp.loginmodule.cert.cert.rootCertKeyStorePath}"></property>
		<property name="rootCertKeyStoreType" value="${idp.loginmodule.cert.cert.rootCertKeyStoreType}"></property>
		<property name="rootCertKeyStorePassword" value="${idp.loginmodule.cert.cert.rootCertKeyStorePassword}"></property>
		<property name="rootCertAlias" value="${idp.loginmodule.cert.cert.rootCertAlias}"></property>
	</bean>
  
  <!-- CRLDownload schedule bean, used by Spring Job Controlled substance -->
  <bean id="crlDownload4TimeSynTask"
    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    <property name="targetObject" ref="crlRepositoryService" />
    <property name="targetMethod" value="updateCrlCacheFromURL" />
    <property name="concurrent" value="false" />
  </bean>
  <bean id="crlDownloadTriggers" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
      <list>
        <!--  
                                         当前配置的是: 每小时运行一次
                                         value中的内容： 
                                               第6位：的1代表星期天，在国外星期天才是每个周的开始！ 
                                              第5位： *代表所有月的星期天 
                                              第4位：？代表也没有具体到某日的星期天 
                                              第3位：23代表23点，注意：采用24小时 
                                              第2位：59代表分钟 
                                              第1位：50代表秒 
        -->
        <bean class="org.springframework.scheduling.quartz.CronTriggerBean"> 
            <property name="jobDetail" ref="crlDownload4TimeSynTask"/> 
            <property name="cronExpression" value="${idp.loginmodule.cert.crl.timeSynTaskCronExpression}"/>  
        </bean> 
      </list>
    </property>
  </bean>
	
</beans>